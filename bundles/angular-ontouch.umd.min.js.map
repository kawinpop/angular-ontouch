{"version":3,"sources":["ng://angular-ontouch/lib/directive/touch.directive.ts","ng://angular-ontouch/lib/angular-ontouch.service.ts","ng://angular-ontouch/lib/angular-ontouch.component.ts","ng://angular-ontouch/lib/angular-ontouch.module.ts"],"names":["TouchDirective","this","touch","EventEmitter","countTouchMove","prototype","onclick","$event","event","cancelable","preventDefault","ontouchstart","timemove","emit","ontouchmove","ontouchend","stopPropagation","time","Directive","args","selector","Output","Input","HostListener","AngularOntouchService","Injectable","providedIn","AngularOntouchComponent","ngOnInit","Component","template","AngularOntouchModule","NgModule","declarations","imports","exports"],"mappings":"uRAAA,IAAAA,EAAA,WA4CE,SAAAA,IApCAC,KAAAC,MAAQ,IAAIC,EAAAA,aAKZF,KAAAG,eAAiB,EAkCnB,OAhCqCJ,EAAAK,UAAAC,QAAnC,SAA2CC,GACrCC,MAAMC,YACRD,MAAME,kBAI8BV,EAAAK,UAAAM,aAAxC,SAAqDJ,GAC7B,IAAlBN,KAAKW,UACPX,KAAKC,MAAMW,QAIwBb,EAAAK,UAAAS,YAAvC,SAAmDP,GACjDN,KAAKG,kBAG+BJ,EAAAK,UAAAU,WAAtC,SAAiDR,GAC3CC,MAAMC,aACRD,MAAME,iBACNF,MAAMQ,uBAEFC,EAAOhB,KAAKW,UAAY,EAC1BX,KAAKG,eAAiBa,GACxBhB,KAAKC,MAAMW,OAEbZ,KAAKG,eAAiB,uBAtCzBc,EAAAA,UAASC,KAAA,CAAC,CACTC,SAAU,sFAITC,EAAAA,yBAGAC,EAAAA,uBAKAC,EAAAA,aAAYJ,KAAA,CAAC,QAAS,CAAC,iCAMvBI,EAAAA,aAAYJ,KAAA,CAAC,aAAc,CAAC,gCAM5BI,EAAAA,aAAYJ,KAAA,CAAC,YAAa,CAAC,+BAI3BI,EAAAA,aAAYJ,KAAA,CAAC,WAAY,CAAC,cAgB7BnB,EA/CA,GCAA,IAAAwB,EAAA,WAOE,SAAAA,gCALDC,EAAAA,WAAUN,KAAA,CAAC,CACVO,WAAY,wJAHd,GCAAC,EAAA,WAaE,SAAAA,KAKF,OAHEA,EAAAtB,UAAAuB,SAAA,iCAbDC,EAAAA,UAASV,KAAA,CAAC,CACTC,SAAU,sBACVU,SAAU,kGAcZH,EAlBA,GCAAI,EAAA,WAMA,SAAAA,KAYoC,2BAZnCC,EAAAA,SAAQb,KAAA,CAAC,CACRc,aAAc,CACZN,EACA3B,GAEFkC,QAAS,GAETC,QAAS,CACPR,EACA3B,OAGgC+B,EAlBpC","sourcesContent":["import { Directive, HostListener, Output, EventEmitter, Input } from '@angular/core';\n\n@Directive({\n  selector: '[ng-touch]'\n})\nexport class TouchDirective {\n\n  @Output()\n  touch = new EventEmitter();\n\n  @Input()\n  timemove: number;\n\n  countTouchMove = 0;\n\n  @HostListener('click', ['$event']) onclick($event) {\n    if (event.cancelable) {\n      event.preventDefault();\n    }\n  }\n\n  @HostListener('touchstart', ['$event']) ontouchstart($event) {\n    if (this.timemove === 0) {\n      this.touch.emit();\n    }\n  }\n\n  @HostListener('touchmove', ['$event']) ontouchmove($event) {\n    this.countTouchMove++;\n  }\n\n  @HostListener('touchend', ['$event']) ontouchend($event) {\n    if (event.cancelable) {\n      event.preventDefault();\n      event.stopPropagation();\n    }\n    const time = this.timemove || 3;\n    if (this.countTouchMove < time) {\n      this.touch.emit();\n    }\n    this.countTouchMove = 0;\n\n  }\n\n  constructor(\n  ) { }\n\n}\n","import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AngularOntouchService {\n\n  constructor() { }\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'lib-angular-ontouch',\n  template: `\n    <p>\n      angular-ontouch works!\n    </p>\n  `,\n  styles: []\n})\nexport class AngularOntouchComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { AngularOntouchComponent } from './angular-ontouch.component';\nimport { TouchDirective } from './directive/touch.directive';\n\n\n\n@NgModule({\n  declarations: [\n    AngularOntouchComponent,\n    TouchDirective\n  ],\n  imports: [\n  ],\n  exports: [\n    AngularOntouchComponent,\n    TouchDirective\n  ]\n})\nexport class AngularOntouchModule { }\n"]}